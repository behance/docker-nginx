FROM alpine:3.4
MAINTAINER Bryan Latten <latten@adobe.com>

# Use in multi-phase builds, when an init process requests for the container to gracefully exit, so that it may be committed
# Used with alternative CMD (worker.sh), leverages supervisor to maintain long-running processes
ENV SIGNAL_BUILD_STOP=99 \
    CONTAINER_ROLE=web \
    CONTAINER_PORT=8080 \
    CONF_NGINX_SITE="/etc/nginx/sites-available/default" \
    CONF_NGINX_SERVER="/etc/nginx/nginx.conf" \
    NOT_ROOT_USER=www-data \
    S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \
    S6_KILL_FINISH_MAXTIME=5000 \
    S6_KILL_GRACETIME=3000 \
    S6_VERSION=v1.18.1.5 \
    GOSS_VERSION=v0.2.3

# Create an unprivileged user
RUN adduser -D -S -H $NOT_ROOT_USER

RUN apk update && \
    apk add \
        sed \
        bash \
        grep \
        nginx \
        curl \
    && \
    # Add S6 for zombie reaping, boot-time coordination, signal transformation/distribution \
    curl -L https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-amd64.tar.gz -o /tmp/s6.tar.gz && \
    tar xzf /tmp/s6.tar.gz -C / && \
    rm /tmp/s6.tar.gz && \
    # Add goss for local, serverspec-like testing \
    curl -L https://github.com/aelsabbahy/goss/releases/download/${GOSS_VERSION}/goss-linux-amd64 -o /usr/local/bin/goss && \
    chmod +x /usr/local/bin/goss && \
    apk del curl && \
    rm -rf /var/cache/apk/*

# Overlay the root filesystem from this repo
COPY ./container/root /

# Set nginx to listen on defined port
# Fix permissions to run unprivileged
# NOTE: order of operations is important, new config had to already installed from repo (above)
RUN sed -i "s/listen [0-9]*;/listen ${CONTAINER_PORT};/" $CONF_NGINX_SITE && \
    bash -c "chown ${NOT_ROOT_USER}:${NOT_ROOT_USER} /var/{lib,log}/nginx -Rh" && \
    bash -c "chmod 0755 -R /var/{lib,log}/nginx"

RUN goss -g goss.nginx.yaml validate && \
    /tmp/aufs_hack.sh

# Using a non-privileged port to prevent having to use setcap internally
EXPOSE ${CONTAINER_PORT}

# NOTE: intentionally NOT using s6 init as the entrypoint
# This would prevent container debugging if any of those service crash
CMD ["/bin/bash", "/run.sh"]
