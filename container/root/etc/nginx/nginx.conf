#############################################################
# Replace nginx configuration directly in this file,
# removing the need to perform error-prone replacements
# at build time.
#
# For run-time replacements, ie, consuming environment vars,
# add to the /etc/cont-init.d/nginx script
#############################################################

# Only set when running with superuser permissions, otherwise causes a warning
# user www-data;

worker_processes auto;

pid /tmp/.nginx/nginx.pid;

error_log /tmp/stdout warn;

# Number of file descriptors used for nginx
worker_rlimit_nofile 40000;


events {
    # Optimized to serve many clients with each thread, essential for linux
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low
    multi_accept on;

    # @link http://serverfault.com/questions/209014/how-can-i-observe-what-nginx-is-doing-to-solve-1024-worker-connections-are-n
    worker_connections 1024;
}

http {
    # Add Secure Headers.
    # Note that if add_header is called further downstream, all headers defined here must be redefined in that downstream client block
    # See link below for more details:
    # @link https://blog.g3rt.nl/nginx-add_header-pitfall.html
    include /etc/nginx/http_headers.conf;

    # Doesn't broadcast version level of server software
    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#server_tokens
    server_tokens off;

    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#large_client_header_buffers
    large_client_header_buffers 4 8k;

    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#client_header_buffer_size
    client_header_buffer_size 1k;

    # if the request body size is more than the buffer size, then the entire (or partial) request body is written into a temporary file
    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size
    client_body_buffer_size 16k;

    # @link http://nginx.org/en/docs/hash.html
    types_hash_max_size 2048;

    # if client stop responding, free up memory -- default 60
    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#send_timeout
    send_timeout 2;

    # request timed out -- default 60
    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_timeout
    client_body_timeout 65;

    # allow the server to close connection on non responding client, this will free up memory
    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#reset_timedout_connection
    reset_timedout_connection on;

    # Sets the maximum number of requests that can be served through one keep-alive connection.
    # After the maximum number of requests are made, the connection is closed.
    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_requests
    keepalive_requests 10000;

    # don't buffer data sent, good for small data bursts in real time
    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#tcp_nodelay
    tcp_nodelay on;

    # send headers in one piece, its better then sending them one by one
    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#tcp_nopush
    tcp_nopush on;

    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile
    sendfile on;

    include       mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" NGINX_SERVER';

    log_format minimal '$request_method $request_uri $status';

    access_log /tmp/stdout main;

    # @link http://nginx.org/en/docs/http/ngx_http_core_module.html#keepalive_timeout
    keepalive_timeout 65;

    #gzip on;

    client_body_temp_path /tmp/.nginx/client_body;
    fastcgi_temp_path /tmp/.nginx/fastcgi_temp;
    proxy_temp_path /tmp/.nginx/proxy_temp;
    scgi_temp_path /tmp/.nginx/scgi_temp;
    uwsgi_temp_path /tmp/.nginx/uwsgi_temp;

    # Everything available is enabled in the container
    include /etc/nginx/sites-available/*;
}
