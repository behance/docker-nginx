##################################################################
# This file fully serves as the nginx configuration, replacing
# the package-supplied version during build time.
#
# For run-time replacements, ie, making changes based on
# environment vars, add to the run.d/nginx script
##############################################################

# Note: USER is specified in Dockerfile as www-data, therefore unnecessary to specify manually, which causes nginx warning
# user www-data;

worker_processes auto;

pid /tmp/nginx.pid;

events {
    # @see http://serverfault.com/questions/209014/how-can-i-observe-what-nginx-is-doing-to-solve-1024-worker-connections-are-n
    worker_connections 1024;
}

http {

    include       mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" NGINX_SERVER';

    # suitable for development environments to minimize noise, will be selected with SERVER_LOG_MINIMAL=1 env variable
    log_format minimal '$request_method $request_uri $status';

    error_log /dev/stdout info;
    access_log /dev/stdout main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # @see https://www.exratione.com/2014/03/running-nginx-as-a-non-root-user/
    # Set an array of temp and cache file options that will otherwise default to
    # restricted locations accessible only to root.
    client_body_temp_path /tmp/client_body;
    fastcgi_temp_path /tmp/fastcgi_temp;
    proxy_temp_path /tmp/proxy_temp;
    scgi_temp_path /tmp/scgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;

    # Everything available is enabled in the container
    include /etc/nginx/sites-available/*;
}
